<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{9e70c98e-7383-459f-b7ea-fe155ecc6eac}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	cliente:FB_IotMqttClient;	//Efetivamente o cliente MQTT
	bInit: BOOL:=TRUE;
	bConnect: BOOL;
	sTopicPub:STRING(255):='Topic01';
	sPayloadPub:STRING(255);

	
	i: INT;
	asTopicSub: ARRAY [1..3] OF STRING := ['Topic01', 'Maq/Sensores', 'Maq/Prod'];
	fbMessage: FB_IotMqttMessage;
	bPublish: BOOL;
	
	valoresEnviar: stValues := (Sensor1 := 25.4, Sensor2 := 32, Sensor3 := 64);
	timeHand:FB_LocalSystemTime;
	fbJson:FB_JsonSaxWriter;
	fbJsonDataType:FB_JsonReadWriteDatatype;
	sJsonDoc:STRING(255);
	sJsonDoc2:STRING(2000);
	symbolReturn:stValues;
	bConvertBack: BOOL;
	sensores: stSensores := (bSensor1 := TRUE, rTemp01 := 36.7, rTemp02 := 123.87, udiValor := 32);
	prod: stProducao := (iQdtProd := 123, iQualidade := 321, iPcPerDay := 475);
	sTopicSensores:STRING:='Maq/Sensores';
	sTopicProd:STRING:='Maq/Prod';
	bPublishSensores,bPublishProd:BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
	bInit:=FALSE;
	cliente.sClientId:='Test01';
	cliente.sHostName:='localhost';
	cliente.nHostPort:=1883;
	cliente.ipMessageQueue:=messaQueue;
END_IF

cliente.Execute(bConnect);

IF cliente.bConnected THEN
	FOR i:=1 TO 3 DO
		IF abSubscribe[i] AND NOT abSubscribed[i] THEN
			abSubscribed[i]:=cliente.Subscribe(sTopic:=asTopicSub[i],eQoS:=TcIotMqttQos.AtMostOnceDelivery);
		END_IF
	END_FOR
	IF bPublish THEN
		fbJson.ResetDocument();
		fbJsonDataType.AddJsonValueFromSymbol(fbJson,'stValues',SIZEOF(valoresEnviar),ADR(valoresEnviar));
		sJsonDoc:=fbJson.GetDocument();
		fbJson.CopyDocument(sJsonDoc2,SIZEOF(sJsonDoc2));

		cliente.Publish(sTopic:= sTopicPub, 
		pPayload:= ADR(sJsonDoc2), nPayloadSize:= LEN2(ADR(sJsonDoc2))+1, 
		eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
		bPublish:=FALSE;
	END_IF
	
	IF bPublishSensores THEN
		fbJson.ResetDocument();
		fbJsonDataType.AddJsonValueFromSymbol(fbJson,'stValues',SIZEOF(valoresEnviar),ADR(valoresEnviar));
		sJsonDoc:=fbJson.GetDocument();
		fbJson.CopyDocument(sJsonDoc2,SIZEOF(sJsonDoc2));

		cliente.Publish(sTopic:=sTopicSensores,
		pPayload:= ADR(sJsonDoc2), nPayloadSize:= LEN2(ADR(sJsonDoc2))+1, 
		eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
		bPublishSensores:=FALSE;
	END_IF
	
	IF bPublishProd THEN
		fbJson.ResetDocument();
		fbJsonDataType.AddJsonValueFromSymbol(fbJson,'stProducao',SIZEOF(prod),ADR(prod));
		sJsonDoc:=fbJson.GetDocument();
		fbJson.CopyDocument(sJsonDoc2,SIZEOF(sJsonDoc2));

		cliente.Publish(sTopic:=sTopicProd,
		pPayload:= ADR(sJsonDoc2), nPayloadSize:= LEN2(ADR(sJsonDoc2))+1, 
		eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );		
		bPublishProd:=FALSE;
	END_IF
END_IF

IF bConvertBack THEN
	fbJsonDataType.SetSymbolFromJson(sJsonDoc2,'stValues',SIZEOF(symbolReturn),ADR(symbolReturn));
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="19" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="22" Count="2" />
      <LineId Id="26" Count="10" />
      <LineId Id="58" Count="1" />
      <LineId Id="62" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="37" Count="4" />
      <LineId Id="124" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="100" Count="4" />
      <LineId Id="106" Count="1" />
      <LineId Id="105" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="114" Count="2" />
      <LineId Id="112" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="120" Count="0" />
      <LineId Id="110" Count="1" />
      <LineId Id="42" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="88" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>